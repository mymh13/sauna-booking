@inject IJSRuntime JS
@inject NavigationManager Navigation

<nav class="nav-menu">
    <div class="nav-container">
        <div class="nav-left">
            <a class="nav-link" href="https://mymh.dev">mymh.dev</a>
            <NavLink href="calendar" class="nav-link" Match="NavLinkMatch.All">Kalender</NavLink>
            <NavLink href="dashboard" class="nav-link" Match="NavLinkMatch.All">Dashboard</NavLink>
        </div>
        <div class="nav-right">
            @if (!string.IsNullOrEmpty(LoggedInUsername))
            {
                <span class="nav-user">Inloggad som: @LoggedInUsername</span>
                <button class="nav-button" @onclick="Logout">Logga ut</button>
            }
            else
            {
                <NavLink href="login" class="nav-link" Match="NavLinkMatch.All">Logga in</NavLink>
            }
            <button class="nav-button" @onclick="ToggleTheme">@CurrentThemeLabel</button>
        </div>
    </div>
</nav>

@code {
    private string? LoggedInUsername;
    private string CurrentThemeLabel = "Mörkt läge";

    protected override async Task OnInitializedAsync()
    {
        LoggedInUsername = await JS.InvokeAsync<string>("localStorage.getItem", "username");

        var theme = await JS.InvokeAsync<string>("localStorage.getItem", "theme");
        CurrentThemeLabel = theme == "light" ? "Mörkt läge" : "Ljust läge";
    }

    private async Task Logout()
    {
        await JS.InvokeVoidAsync("localStorage.removeItem", "username");
        await JS.InvokeVoidAsync("localStorage.removeItem", "role");
        LoggedInUsername = null;
        Navigation.NavigateTo("/sauna/");
    }

    private async Task ToggleTheme()
    {
        var currentTheme = await JS.InvokeAsync<string>("localStorage.getItem", "theme");
        if (currentTheme == "light")
        {
            await JS.InvokeVoidAsync("localStorage.setItem", "theme", "dark");
            CurrentThemeLabel = "Ljust läge";
        }
        else
        {
            await JS.InvokeVoidAsync("localStorage.setItem", "theme", "light");
            CurrentThemeLabel = "Mörkt läge";
        }

        await JS.InvokeVoidAsync("location.reload");
    }
}